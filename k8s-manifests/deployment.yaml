apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-chatbot
  namespace: ai-chatbot
  labels:
    app: ai-chatbot
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ai-chatbot
  template:
    metadata:
      labels:
        app: ai-chatbot
    spec:
      containers:
        - name: ai-chatbot
          image: image-registry.openshift-image-registry.svc:5000/ai-chatbot/ai-chatbot-openshift:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: GEMINI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: chatbotkv
                  key: GEMINI_API_KEY
            - name: PRISMA_AIRS_API_KEY
              valueFrom:
                secretKeyRef:
                  name: chatbotkv
                  key: PRISMA_AIRS_API_KEY
            - name: PRISMA_AIRS_PROFILE
              valueFrom:
                secretKeyRef:
                  name: chatbotkv
                  key: PRISMA_AIRS_PROFILE
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /ai-chatbot/healthcheck
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /ai-chatbot/healthcheck
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: ai-chatbot-svc
  namespace: ai-chatbot
  labels:
    app: ai-chatbot
spec:
  selector:
    app: ai-chatbot
  ports:
    - name: http
      port: 80
      targetPort: 5000
      protocol: TCP
  type: ClusterIP  # Use ClusterIP for internal access; external via Route
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: ai-chatbot
  namespace: ai-chatbot
spec:
  path: /ai-chatbot
  to:
    kind: Service
    name: ai-chatbot-svc
  port:
    targetPort: http
  tls:
    termination: edge